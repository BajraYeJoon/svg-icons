---
interface Props {
  placeholder?: string;
  class?: string;
}

const { placeholder = 'Search icons...', class: className } = Astro.props;
---

<div class:list={['relative', className]}>
  <input
    type="search"
    placeholder={placeholder}
    class="w-full px-4 py-2 text-sm border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
    id="icon-search"
  />
  <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
    <svg
      class="w-4 h-4 text-gray-400"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
      />
    </svg>
  </div>
</div>

<script>
  const searchInput = document.getElementById('icon-search') as HTMLInputElement;
  const iconCards = document.querySelectorAll('[data-icon-card]');

  searchInput?.addEventListener('input', (e) => {
    const searchTerm = (e.target as HTMLInputElement).value.toLowerCase();

    iconCards.forEach((card) => {
      const name = card.getAttribute('data-name')?.toLowerCase() || '';
      const category = card.getAttribute('data-category')?.toLowerCase() || '';
      const isVisible = name.includes(searchTerm) || category.includes(searchTerm);
      
      card.classList.toggle('hidden', !isVisible);
    });
  });
</script>